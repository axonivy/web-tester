pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '20'))
  }

  triggers {
    cron '@midnight'
  }

  stages {
    stage('build') {
      steps {
        script {
          if (isReleaseOrMasterBranch()) {
            docker.build('maven').inside() {
              maven cmd: "org.cyclonedx:cyclonedx-maven-plugin:makeBom -DincludeLicenseText=true -DoutputFormat=json"
              withCredentials([string(credentialsId: 'dependency-track', variable: 'API_KEY')]) {
                def projects = ["unit-tester", "primeui-tester", "web-tester"]
                for (project in projects) {
                  def version = sh (script: "mvn -f ${project}/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout", returnStdout: true)
                  uploadBOM(projectName: project, projectVersion: version, bomFile: project + '/target/bom.json')
                }
              }
            }
          }        
        }        
      }
    }
  }
}

def isReleaseOrMasterBranch() {
  return env.BRANCH_NAME == 'master' || env.BRANCH_NAME.startsWith('release/') 
}
